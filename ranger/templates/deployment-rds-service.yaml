{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}
{{- define "RangerRdsServiceReadinessProbeTemplate" }}
exec:
  command:
    - python
    - /tmp/health-probe.py
    - --config-file
    - /etc/ranger/ranger.conf
    - --service-name
    - rds
{{- end }}
{{- define "RangerRdsServiceLivenessProbeTemplate" }}
exec:
  command:
    - python
    - /tmp/health-probe.py
    - --config-file
    - /etc/ranger/ranger.conf
    - --service-name
    - rds
    - --liveness-probe
{{- end }}
{{- if .Values.manifests.deployment_ranger_services }}
{{- $envAll := . }}

{{- $mounts_rds := .Values.pod.mounts.ranger.rds }}
{{- $mounts_ranger_init := .Values.pod.mounts.ranger.init_container }}

{{- $serviceAccountName := "ranger-rds-service" }}
{{ tuple $envAll "rds" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceAccountName }}
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  labels:
{{ tuple $envAll "ranger" "rds" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  selector:
    matchLabels:
{{ tuple $envAll "ranger" "rds" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
  replicas: {{ .Values.pod.replicas.ranger }}
{{ tuple $envAll | include "helm-toolkit.snippets.kubernetes_upgrades_deployment" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "ranger" "rds" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
{{ dict "envAll" $envAll "podName" "ranger-rds-service" "containerNames" (list "init" "ranger-rds-service") | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
    spec:
{{ dict "envAll" $envAll "application" "rds" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      serviceAccountName: {{ $serviceAccountName }}
      affinity:
{{ tuple $envAll "ranger" "rds" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.labels.rds.node_selector_key }}: {{ .Values.labels.rds.node_selector_value }}
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.ranger.timeout | default "30" }}
      initContainers:
{{ tuple $envAll "rds" $mounts_ranger_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
      containers:
        - name: ranger-rds-service
          image: {{ .Values.images.tags.ranger }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
{{ tuple $envAll $envAll.Values.pod.resources.ranger | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "rds" "container" "ranger_rds_service" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          env:
            {{- if .Values.manifests.secret_ssh_key }}
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: ranger-ssh-secret
                  key: USER
            - name: USER_HOME
              valueFrom:
                secretKeyRef:
                  name: ranger-ssh-secret
                  key: USER_HOME
            - name: SSH_KEY_FILE
              valueFrom:
                secretKeyRef:
                  name: ranger-ssh-secret
                  key: SSH_KEY_FILE
            - name: SSH_KEY
              valueFrom:
                secretKeyRef:
                  name: ranger-ssh-secret
                  key: RANGER_PRIVATE_KEY
            - name: SSH_KEY_CONFIGURATION
              valueFrom:
                secretKeyRef:
                  name: ranger-ssh-secret
                  key: RANGER_SSH_CONFIG
            - name: REPO_USER
              value: {{ .Values.conf.ranger.rds.repo_user }}
            - name: REPO_ACCOUNT
              value: {{ .Values.conf.ranger.rds.repo_email }}
            - name: LOCAL_REPO
              value: {{ .Values.conf.ranger.rds.repo_local_location }}
            - name: REMOTE_REPO
              value: {{ .Values.conf.ranger.rds.repo_remote_location }}
            {{- end }}
          {{- if .Values.conf.ranger.DEFAULT.ranger_agent_https_enabled }}
            - name: CERT_LOCATION
              value: {{ .Values.conf.ranger.DEFAULT.ranger_agent_client_cert_path }}
            - name: CERT_FILE
              {{ if .Values.manifests.secret_ssh_key }}
              valueFrom:
                secretKeyRef:
                  name: ranger-ssh-secret
                  key: CERT_FILE
              {{ else }}
              value: {{ .Values.conf.cert.ranger_agent_client_cert }}
              {{ end }}
          {{- end }}
            - name: RDS_SERVICE_URL
              value: {{ tuple "rds" "public" "api" . | include "helm-toolkit.endpoints.keystone_endpoint_uri_lookup" }}
          command:
            - /tmp/ranger-rds-service.sh
            - start
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/ranger-rds-service.sh
                  - stop
          ports:
            - name: rds
              containerPort: {{ tuple "rds" "internal" "api" . | include "helm-toolkit.endpoints.endpoint_port_lookup" }}
{{ dict "envAll" $envAll "component" "rds" "container" "ranger-rds-service" "type" "readiness" "probeTemplate" (include "RangerRdsServiceReadinessProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
{{ dict "envAll" $envAll "component" "rds" "container" "ranger-rds-service" "type" "liveness" "probeTemplate" (include "RangerRdsServiceLivenessProbeTemplate" $envAll | fromYaml) | include "helm-toolkit.snippets.kubernetes_probe" | indent 10 }}
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: pod-etc-ranger
              mountPath: /etc/ranger
            - name: ranger-bin
              mountPath: /tmp/ranger-rds-service.sh
              subPath: ranger-rds-service.sh
              readOnly: true
            - name: ranger-bin
              mountPath: /tmp/health-probe.py
              subPath: health-probe.py
              readOnly: true
            - name: ranger-etc
              mountPath: /etc/ranger/ranger.conf
              subPath: ranger.conf
              readOnly: true
{{- dict "enabled" $envAll.Values.manifests.certificates "name" $envAll.Values.endpoints.oslo_db.auth.admin.secret.tls.internal "path" "/etc/mysql/certs" | include "helm-toolkit.snippets.tls_volume_mount" | indent 12 }}
{{ if $mounts_rds.volumeMounts }}{{ toYaml $mounts_rds.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: pod-etc-ranger
          emptyDir: {}
        - name: ranger-bin
          configMap:
            name: ranger-bin
            defaultMode: 0555
        - name: ranger-etc
          secret:
            secretName: ranger-etc
            defaultMode: 0444
{{- dict "enabled" $envAll.Values.manifests.certificates "name" $envAll.Values.endpoints.oslo_db.auth.admin.secret.tls.internal | include "helm-toolkit.snippets.tls_volume" | indent 8 }}
{{ if $mounts_rds.volumes}}{{ toYaml $mounts_rds.volumes | indent 8 }}{{ end }}
{{- end }}
